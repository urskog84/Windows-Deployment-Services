---
- name: test connection
  win_ping:

- name: Windows Deployment Services 
  win_feature:
    name: WDS
    state: present

- name: Setup WDS.
  win_shell: |
    wdsutil /initialize-server /remInst:"C:\RemoteInstall"  /standalone  | select -last 1
  args:
    creates: C:\RemoteInstall
  register: wds_setup

- name: Create folders c:\sources
  win_file:
    path: C:\sources
    state: directory

#- name: Download Win 10 LTSC EVAL
#  win_get_url:
#    url: https://software-download.microsoft.com/download/sg/17763.107.101029-1455.rs5_release_svc_refresh_CLIENT_LTSC_EVAL_x64FRE_en-us.iso
#    dest: C:\sources
#    checksum: b254ba13c50d777e4776a98684e11e11
#    checksum_algorithm: md5
#
#    Mount-DiskImage -ImagePath "E:\ISO-Files\My US Visit Fall 2010 Pictures.iso"

- name: WdsBootImage
  win_shell:  |
    Import-WdsBootImage -Path "D:\sources\boot.wim"
  args:
    creates: C:\RemoteInstall\Boot\x64\Images\boot.wim

- name: Add new WDS Install ImageGroup
  win_shell: |
    New-WdsInstallImageGroup -Name "Desktops"
  args:
    creates: C:\RemoteInstall\Images\Desktops
    
- name: Import WDS InstallImage to ImageGroup Desktops
  win_shell: |
    $imageName = Get-WindowsImage -imagePath "D:\sources\install.wim" | select Imagename
    Import-WdsInstallImage -ImageGroup "Desktops" -Path "D:\sources\install.wim" -NewImageName $imageName.imageName
  args:
    creates: C:\RemoteInstall\Images\Desktops\install.wim

- name: Check if a dhcp is installed
  win_service:
    name: DHCP
  register: dhcp_info

- name: Check if a wds is running
  win_service:
    name: WDSServer
  register: wds_info

- name: db
  debug:
    msg: '{{ wds_info }}'

- name: No dhcp port when dhcp service
  win_shell: |
    wdsutil /set-Server /UseDhcpPorts:No
  when: 
    - dhcp_info.exists
    - wds_info.state != 'running'

- name: Ensure WDSServer is running
  win_service:
    name: WDSServer
    start_mode: auto
    state: started